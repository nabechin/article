version: 2.1
description: "Djangoプロジェクトの自動テストとEC2に自動デプロイ"

executors:
    article_django:
        working_directory: ~/article
        docker:
            - image: circleci/python:3.8.0
              environment:
                PYTHONDONTWRITEBYTECODE: 1
                PYTHONUNBUFFERED : 1
                TZ: Asia/Tokyo
            - image: circleci/postgres:12.0-alpine
              environment:
                POSTGRES_USER: postgres
                POSTGRES_PASSWORD: postgres
                TZ: Asia/Tokyo
                
commands:
    chown_package:
        description: "installするパッケージのインストール先ディレクトリの権限をcircleciにする"
        steps:
            - run:
                name: "Change Owner of Package Directory"
                command: |
                    sudo chown -R circleci:circleci /usr/local/bin
                    sudo chown -R circleci:circleci /usr/local/lib/python3.8/site-packages
    restore_package:
        description: "インストールしたパッケージがキャッシュされていれば読み込む"
        steps:
            - restore_cache:
                name: Restore Package
                key: dependency-cache-{{ checksum "~/article/app/requirements.txt" }}
    pip_install:
        description: "requirements.txtに記述のあるパッケージをインストールする"
        steps:
            - run:
                name : Install Package
                command: pip install -r ~/article/app/requirements.txt
    save_package:
        description: "インストールしたパッケージをキャッシュする"
        steps:
            - save_cache:
                name: Save Package
                key: dependency-cache-{{ checksum "~/article/app/requirements.txt" }}
                paths:
                - /usr/local/bin
                - /usr/local/lib/python3.8/site-packages
    set_env_variable:
        description: "環境変数を設定"
        steps:
            - run:
                name: base64 decode env file
                command: echo $ENV_FILE | base64 -di > .env
    database_migration:
        description: "テスト用にデータベースをマイグレーションする"
        steps:
            - run:
                name: "migrate database"
                command: |
                    python ~/article/app/manage.py makemigrations
                    python ~/article/app/manage.py migrate
    execute_test:
        description: "テストを実行"
        steps:
            - run:
                name: Execute Test
                command: python ~/article/app/manage.py test

jobs:
    build_and_test:
        executor: article_django
        steps:
            - checkout
            - chown_package
            - restore_package
            - pip_install
            - save_package
            - save_package
            - set_env_variable
            - database_migration
            - execute_test
    project_deploy:
        executor: article_django
        steps:
            - checkout
            - add_ssh_keys:
                fingerprints:
                    - "b6:d5:b5:6d:63:c7:5f:9b:48:88:d2:c0:cd:22:6f:e0"
            - run: ssh ${USER_NAME}@${HOST_NAME_1} 'cd /usr/src/article && sudo git pull origin master'


workflows:
    version: 2
    test:
        jobs:
            - build_and_test:
                filters:
                    branches:
                        ignore: master
            - project_deploy:
                requires:
                    - build_and_test
                filters:
                    branches:
                        only: master


            



                     